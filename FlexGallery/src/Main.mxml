<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 		   
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   minWidth="955"
			   minHeight="600" 
			   xmlns:usercontrol="net.mgechev.view.usercontrol.*" 
			   xmlns:control="net.mgechev.control.*" 
			   xmlns:business="net.mgechev.business.*" 
			   xmlns:view="net.mgechev.view.*" 
			   xmlns:gallery="net.mgechev.view.gallery.*" 
			   xmlns:picturecontrol="net.mgechev.view.picturecontrol.*" 
			   xmlns:appcontrol="net.mgechev.view.appcontrol.*"
			   creationComplete="init(event);">
	
	
	<fx:Declarations>
		
		<s:Fade alphaFrom="1" alphaTo="0" duration="300" id="hidePageEffect" />
		<s:Fade alphaFrom="0" alphaTo="1" duration="300" id="showPageEffect" />
		<control:Controller id="controller" />
		<business:Services id="services" />
		<s:VerticalLayout />
	</fx:Declarations>
	

	<fx:Script>
		<![CDATA[
			import com.adobe.cairngorm.model.ModelLocator;
			
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			
			import net.mgechev.events.appcontrol.LoginCheckEvent;
			import net.mgechev.model.ViewModelLocator;
			
			[Bindable]		
			private var modelLocator:ViewModelLocator = ViewModelLocator.getInstance();
			
			public function init(event:Event):void
			{
				loginCheck(new Event("login"));
				var loginCheckTimer:Timer = new Timer(5000, 0);
				loginCheckTimer.addEventListener(TimerEvent.TIMER, loginCheck);
				loginCheckTimer.start();
				homeGalleryPage.setFocus();				
			}
			
			public function loginCheck(event:Event):void
			{
				var loginCheck:LoginCheckEvent = new LoginCheckEvent();
				loginCheck.dispatch();
			}
		

			protected function hidePage(event:FlexEvent):void
			{
				hidePageEffect.target = event.target;
				hidePageEffect.play();
			}
			
			protected function showPage(event:FlexEvent):void
			{
				showPageEffect.target = event.target;
				showPageEffect.play();
				(event.target as UIComponent).setFocus();
			}

		]]>
	</fx:Script>
<mx:VBox height="100%" width="100%" horizontalAlign="center" verticalAlign="top">

	<mx:Canvas>
	
	<appcontrol:Menu logged="{modelLocator.workflowState == ViewModelLocator.WELCOME_SCREEN}"
					 visible="{(galleryPage.inSlideshowState || homeGalleryPage.inSlideshowState)?false:true}"
					 x="21" y="142"/>
	
	<mx:ViewStack width="304" height="122" selectedIndex="{modelLocator.workflowState}" x="11" y="9"
				  visible="{(galleryPage.inSlideshowState || homeGalleryPage.inSlideshowState)?false:true}">
		<usercontrol:LoginForm dropShadowVisible="false" />
		<usercontrol:WelcomeScreen username="{modelLocator.username}" />
	</mx:ViewStack>
		
	<usercontrol:EditProfileForm email="{modelLocator.email}" hide="hidePage(event);" show="showPage(event);"
					visible="{(modelLocator.currentPage == ViewModelLocator.EDIT_PROFILE &amp;&amp;
					modelLocator.workflowState == ViewModelLocator.WELCOME_SCREEN)}" x="200" y="178" />
	<usercontrol:RegistrationForm hide="hidePage(event);" show="showPage(event);"
				    visible="{(modelLocator.currentPage == ViewModelLocator.REGISTER &amp;&amp;
				    modelLocator.workflowState == ViewModelLocator.LOGIN_SCREEN)}" x="200" y="178" />
	
	<picturecontrol:UploadForm progress="{modelLocator.uploadProgress}" hide="hidePage(event);" show="showPage(event);"
					visible="{(modelLocator.currentPage == ViewModelLocator.UPLOAD &amp;&amp;
					modelLocator.workflowState == ViewModelLocator.WELCOME_SCREEN)}"  x="200" y="178"/>
	
	<gallery:Gallery isUserpanelEnabled="true" id="galleryPage"
					 x="0" 
					 y="178"
					 hide="hidePage(event);" show="showPage(event);"
					 visible="{(modelLocator.currentPage == ViewModelLocator.VIEW_USERS &amp;&amp;
					 modelLocator.workflowState == ViewModelLocator.WELCOME_SCREEN)}"/>
	
	<gallery:Gallery id="homeGalleryPage"
					 x="0" 
					 y="178"
					 isUserpanelEnabled="false" hide="hidePage(event);" show="showPage(event);"
					 visible="{modelLocator.currentPage == ViewModelLocator.HOME}" />
	
	<picturecontrol:EditPictures hide="hidePage(event);" show="showPage(event);"
					visible="{(modelLocator.currentPage == ViewModelLocator.PICTURES &amp;&amp;
					modelLocator.workflowState == ViewModelLocator.WELCOME_SCREEN)}" x="100" y="178"/>
	</mx:Canvas>
</mx:VBox>
	
</s:Application>
